version: '3.7'

services:
  postgres:
    image: postgres:12.1-alpine
    container_name: taxi-postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=taxi_db
      - POSTGRES_USER=taxi
      - POSTGRES_PASSWORD=taxi
  client:
    build: ./client
    container_name: taxi-client
    volumes:
      - ./client:/usr/src/app
      - /usr/src/node_modules
    ports:
      - "3001:3000"
    depends_on:
      - postgres
      - server
    stdin_open: true
  server:
    build: ./server
    container_name: taxi-server
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./server/:/usr/src/app/
    ports:
      - "8100:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - postgres
    links:
      - redis
    stdin_open: true
    tty: true
  redis:
    image: redis:latest
    container_name: taxi-redis
  e2e:
    image: cypress/included:3.4.0
    build:
      context: ./client
      dockerfile: Dockerfile.e2e
    container_name: taxi-e2e
    depends_on:
      - client
    # note: inside e2e container, the network allows accessing
    # "client" host under name "client"
    # so "curl http://client:3000" would return whatever the webserver
    # in the "client" container is cooking
    # see https://docs.docker.com/compose/networking/
    environment:
      - CYPRESS_baseUrl=http://client:3000
    command: npx cypress run
    # mount the host directory cliennt/cypress and the file cliennt/cypress.json as
    # volumes within the container
    # this means that:
    #  1. anything that Cypress writes to these folders (e.g., screenshots,
    #     videos) appears also on the Docker host's filesystem
    #  2. any change that the developer applies to Cypress files on the host
    #     machine immediately takes effect within the e2e container (no docker
    #     rebuild required).
    volumes:
      - ./client/cypress:/e2e/cypress
      - ./client/cypress/screenshots:/e2e/cypress/screenshots
      - ./client/cypress.json:/e2e/cypress.json
volumes:
  postgres-data:
